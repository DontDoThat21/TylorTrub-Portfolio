// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TylorTrubPortfolio.DataAccess.Data;

#nullable disable

namespace TylorTrubPortfolio.DataAccess.Migrations
{
    [DbContext(typeof(MotorcycleDBContext))]
    [Migration("20230507141525_AddedMotorcycleDBContext")]
    partial class AddedMotorcycleDBContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TylorTrubPortfolio.Models.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brakes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotorcycleCc")
                        .HasColumnType("int");

                    b.Property<string>("MotorcycleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Torque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Year")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Motorcycles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddDate = new DateTime(2023, 5, 7, 10, 15, 24, 948, DateTimeKind.Local).AddTicks(1514),
                            Brakes = "Brembo",
                            EngineStyle = "Four Stroke V4",
                            Hp = "0",
                            Manufacturer = "Yamaha",
                            MotorcycleCc = 998,
                            MotorcycleName = "Yamaha MT-10",
                            Picture = "yamahamt10.jpg",
                            Torque = "110.8ft",
                            Year = (byte)19
                        },
                        new
                        {
                            Id = 2,
                            AddDate = new DateTime(2023, 5, 7, 10, 15, 24, 948, DateTimeKind.Local).AddTicks(1560),
                            Brakes = "Brembo",
                            EngineStyle = "Four Stroke Supercharged",
                            Hp = "0",
                            Manufacturer = "Kawasaki",
                            MotorcycleCc = 998,
                            MotorcycleName = "Kawasaki H2-R",
                            Picture = "kawasakih2r.png",
                            Torque = "115ft",
                            Year = (byte)23
                        },
                        new
                        {
                            Id = 3,
                            AddDate = new DateTime(2023, 5, 7, 10, 15, 24, 948, DateTimeKind.Local).AddTicks(1563),
                            Brakes = "1-Disc-Rear, 2-Front",
                            EngineStyle = "4-Stroke Twin Boxer",
                            Hp = "0",
                            Manufacturer = "BMW",
                            MotorcycleCc = 1085,
                            MotorcycleName = "BMW R1100RS",
                            Picture = "bmwk1100caferacer.jpg",
                            Torque = "92.9ft",
                            Year = (byte)2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
